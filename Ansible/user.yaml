- name: user
  hosts: user
  become: yes
  tasks:
    - name: disable nodejs and enable nodejs 18
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y 

    - name: install nodejs
      ansible.builtin.dnf: 
        name: nodejs 
        state: present
       
    - name: create user roboshop
      ansible.builtin.user:
        name: roboshop
        
    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download the application code
      ansible.builtin.get_url:
         url: https://roboshop-builds.s3.amazonaws.com/user.zip
         dest: /tmp 

    - name: extract user zip
      ansible.builtin.unarchive:
         src: /tmp/user.zip
         dest: /app  
         remote_src: yes

    - name: install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app
     
    - name: copy user service
      ansible.builtin.copy:
         src: user.service
         dest: /etc/systemd/system/user.service 

    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
         
    - name: copy mangodb repo
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install  mangodb client
      ansible.builtin.package:
         name: mongodb-org-shell
         state: present
    - name: get the catagories count
      ansible.builtin.command: mongo --host mangodb.prasuna.site --quiet --eval 'db=db.getSiblingDB("user"); db.users.count()'
       register: user_count
       args:
        chdir: /app
    
    - name: load schema
      ansible.builtin.command: mongo --host mangodb.prasuna.site </app/schema/catalogue.js
        when: product_count.sdtout == 0
         args:
         chdir: /app