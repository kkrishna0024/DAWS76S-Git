- name: install shipping components
  hosts: shipping
  become: yes
  vars:
    mysql_password: pRoboShop@1
  tasks:
   - name: instal maven
     ansible.builtin.dnf:
      name: maven
      state: present

   - name: create app directory
     ansible.builtin.file:
        path: /app
        state: directory

   - name: Download the application code
     ansible.builtin.get_url:
         url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
         dest: /tmp 

   - name: extract user zip
     ansible.builtin.unarchive:
         src: /tmp/shipping.zip
         dest: /app  
         remote_src: yes

   - name: install dependencies
     ansible.builtin.command: mvn clean package
     args:
        chdir: /app

   - name: rename jar file
     ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
     args:
        chdir: /app

   - name: Setup SystemD Shipping Service
     ansible.builtin.copy: 
       src: shipping.service
       dest: /etc/systemd/system/shipping.service


   - name: daemon reload
     ansible.builtin.systemd_service:
        daemon_reload: true


   - name: install mysql client
     ansible.builtin.dnf:
        name: mysql
        state: present

   - name: check cities schema exist or not
     ansible.builtin.command: mysql -h mysql.prasuna.site -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME= 'cities' "
     register: schema

   - name: print output
     ansible.builtin.debug:
       msg: "schema output: {{schema}}"

   - name: load schema data
     ansible.builtin.shell: mysql -h mysql.prasuna.site -uroot -p{{mysql_password}} < /app/schema/shipping.sql
      when: schema.sdout != "1"